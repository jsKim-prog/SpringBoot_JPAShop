buildscript {
    ext{
        queryDslVersion = "5.0.0"
    }
}//querydsl 관련 추가 1 --쿼리dsl 버전 관리 (http://www.querydsl.com)
plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.shop'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    // https://mvnrepository.com/artifact/org.thymeleaf.extras/thymeleaf-extras-java8time --날짜시간 포맷팅
    implementation 'org.thymeleaf.extras:thymeleaf-extras-java8time:3.0.4.RELEASE'
    // https://mvnrepository.com/artifact/nz.net.ultraq.thymeleaf/thymeleaf-layout-dialect -- 공통 레이아웃 적용
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:3.1.0'
    // https://mvnrepository.com/artifact/org.thymeleaf.extras/thymeleaf-extras-springsecurity5 --로그인/아웃 화면연동
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6:3.1.2.RELEASE'



    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok' //log4j2
    testAnnotationProcessor  'org.projectlombok:lombok' //log4j2
    annotationProcessor 'org.projectlombok:lombok'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    //runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    implementation 'org.mariadb.jdbc:mariadb-java-client:3.4.1'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-security --시큐리티 설정 추가
    implementation 'org.springframework.boot:spring-boot-starter-security'
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-validation --서버로 넘어오는 값 검증용
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    // https://mvnrepository.com/artifact/org.springframework.security/spring-security-test --시큐리티 테스트용
    testImplementation 'org.springframework.security:spring-security-test'



    //querydsl 관련 설정 추가2
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
    annotationProcessor(
            "jakarta.persistence:jakarta.persistence-api",
            "jakarta.annotation:jakarta.annotation-api",
            "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"
    )

    // https://mvnrepository.com/artifact/org.modelmapper/modelmapper --modelMapper 라이브러리 추가
    implementation 'org.modelmapper:modelmapper:2.3.9'


}

tasks.named('test') {
    useJUnitPlatform()
}
//querydsl 관련 설정 추가3
sourceSets{
    main{
        java{
            srcDirs=["$projectDir/src/main/java", "$projectDir/build/generated"]
        }
    }
}
compileJava.dependsOn('clean')